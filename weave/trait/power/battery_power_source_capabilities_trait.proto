/*
 *
 *    Copyright (c) 2019 Google LLC.
 *    Copyright (c) 2016-2018 Nest Labs, Inc.
 *    All rights reserved.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/**
 *    @file
 *      This file specifies a Weave Common trait that generalizes how
 *      any Weave device resource presents dynamic, read-only battery power
 *      source capabilities information common to any such device.
 *
 */

syntax = "proto3";

package weave.trait.power;

import "wdl/wdl_options.proto";

import "weave/common/string_ref.proto";
import "weave/trait/power/power_source_capabilities_trait.proto";
import "google/protobuf/wrappers.proto";

option java_outer_classname = "WeaveInternalBatteryPowerSourceCapabilitiesTrait";
option objc_class_prefix = "SCM";

/**
 *  @brief
 *    Battery Power Source Capabilities
 *
 *  A Weave Common trait that allows vendors to enumerate dynamic, read-only
 *  basic properties about a battery power source in a device resource.
 */
message BatteryPowerSourceCapabilitiesTrait {
        option (wdl.message_type) = TRAIT;

        option (wdl.trait) = {
          stability: ALPHA,
                vendor_id: 0x0000,
                id:        0x001B,
                version:   1
        };

        /**
         *  This enumeration represents of the possible battery cell
         *  chemistries present in a battery power source.
         *
         *  The enumerations are grouped by primary and secondary cell
         *  chemistries.
         */
        enum BatteryChemistry {
                option allow_alias = true;

                option (wdl.enumopts) = {
                        extendable: true,
                        reserved_tag_min: 1,
                        reserved_tag_max: 64
                };

                // Primary (Non-rechargeable) Cell Chemistries

                BATTERY_CHEMISTRY_UNSPECIFIED                     =  0;                         ///< The cell chemistry is alkaline (zinc manganese dioxide).
                BATTERY_CHEMISTRY_ALKALINE                        =  1;                         ///< The cell chemistry is alkaline (zinc manganese dioxide).
                BATTERY_CHEMISTRY_LITHIUM_CARBON_FLUORIDE         =  2;                         ///< The cell chemistry is lithium carbon fluoride.
                BATTERY_CHEMISTRY_LITHIUM_CHROMIUM_OXIDE          =  3;                         ///< The cell chemistry is lithium chromium oxide.
                BATTERY_CHEMISTRY_LITHIUM_COPPER_OXIDE            =  4;                         ///< The cell chemistry is lithium copper oxide.
                BATTERY_CHEMISTRY_LITHIUM_IRON_DISULFIDE          =  5;                         ///< The cell chemistry is lithium iron disulfide.
                BATTERY_CHEMISTRY_LITHIUM_MANGANESE_DIOXIDE       =  6;                         ///< The cell chemistry is lithium manganese dioxide.
                BATTERY_CHEMISTRY_LITHIUM_THIONYL_CHLORIDE        =  7;                         ///< The cell chemistry is lithium thionyl chloride.
                BATTERY_CHEMISTRY_MAGNESIUM                       =  8;                         ///< The cell chemistry is magnesium.
                BATTERY_CHEMISTRY_MERCURY_OXIDE                   =  9;                         ///< The cell chemistry is mercury oxide.
                BATTERY_CHEMISTRY_NICKEL_OXYHYDRIDE               = 10;                         ///< The cell chemistry is nickel oxyhydride.
                BATTERY_CHEMISTRY_SILVER_OXIDE                    = 11;                         ///< The cell chemistry is silver oxide.
                BATTERY_CHEMISTRY_ZINC_AIR                        = 12;                         ///< The cell chemistry is zinc air.
                BATTERY_CHEMISTRY_ZINC_CARBON                     = 13;                         ///< The cell chemistry is zinc carbon.
                BATTERY_CHEMISTRY_ZINC_CHLORIDE                   = 14;                         ///< The cell chemistry is zinc chloride.
                BATTERY_CHEMISTRY_ZINC_MANGANESE_DIOXIDE          =  1;                         ///< The cell chemistry is zinc manganese dioxide (alkaline).

                // Secondary (Rechargeable) Cell Chemistries

                BATTERY_CHEMISTRY_LEAD_ACID                       = 32;                         ///< The cell chemistry is lead acid.
                BATTERY_CHEMISTRY_LITHIUM_COBALT_OXIDE            = 33;                         ///< The cell chemistry is lithium cobalt oxide.
                BATTERY_CHEMISTRY_LITHIUM_ION                     = 34;                         ///< The cell chemistry is lithium ion.
                BATTERY_CHEMISTRY_LITHIUM_ION_POLYMER             = 35;                         ///< The cell chemistry is lithium ion polymer.
                BATTERY_CHEMISTRY_LITHIUM_IRON_PHOSPHATE          = 36;                         ///< The cell chemistry is lithium iron phosphate.
                BATTERY_CHEMISTRY_LITHIUM_SULFUR                  = 37;                         ///< The cell chemistry is lithium sulfur.
                BATTERY_CHEMISTRY_LITHIUM_TITANATE                = 38;                         ///< The cell chemistry is lithium titanate.
                BATTERY_CHEMISTRY_NICKEL_CADMIUM                  = 39;                         ///< The cell chemistry is nickel cadmium.
                BATTERY_CHEMISTRY_NICKEL_HYDROGEN                 = 40;                         ///< The cell chemistry is nickel hydrogen.
                BATTERY_CHEMISTRY_NICKEL_IRON                     = 41;                         ///< The cell chemistry is nickel iron.
                BATTERY_CHEMISTRY_NICKEL_METAL_HYDRIDE            = 42;                         ///< The cell chemistry is nickel metal hydride.
                BATTERY_CHEMISTRY_NICKEL_ZINC                     = 43;                         ///< The cell chemistry is nickel zinc.
                BATTERY_CHEMISTRY_SILVER_ZINC                     = 44;                         ///< The cell chemistry is silver zinc.
                BATTERY_CHEMISTRY_SODIUM_ION                      = 45;                         ///< The cell chemistry is sodium ion.
                BATTERY_CHEMISTRY_SODIUM_SULFUR                   = 46;                         ///< The cell chemistry is sodium sulfur.
                BATTERY_CHEMISTRY_ZINC_BROMIDE                    = 47;                         ///< The cell chemistry is zinc bromide.
                BATTERY_CHEMISTRY_ZINC_CERIUM                     = 48;                         ///< The cell chemistry is zinc cerium.
        }

        /**
         *  This enumeration represents replaceability of the battery or
         *  batteries in the battery power source.
         */
        enum BatteryReplaceability {
                option (wdl.enumopts) = {
                        extendable: false
                };

                BATTERY_REPLACEABILITY_UNSPECIFIED          =  0;                         ///< The replaceability is unspecified or unknown.
                BATTERY_REPLACEABILITY_NOT_REPLACEABLE      =  1;                         ///< The battery power source is not replaceable.
                BATTERY_REPLACEABILITY_USER_REPLACEABLE     =  2;                         ///< The battery power source is replaceable by the user or customer.
                BATTERY_REPLACEABILITY_FACTORY_REPLACEABLE  =  3;                         ///< The battery power source is replaceable by an authorized factory technician.
        }

        /**
         *  This enumeration represents common or colloquial designations for
         *  a variety of battery types, sizes, and chemistries.
         */
        enum CommonBatteryDesignationIdentifier {
                option (wdl.enumopts) = {
                        extendable: true,
                        reserved_tag_min: 1,
                        reserved_tag_max: 128
                };

                COMMON_BATTERY_DESIGNATION_IDENTIFIER_UNSPECIFIED =  0;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_AAA         =  1;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_AA          =  2;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_C           =  3;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_D           =  4;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_4V5         =  5;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_6V0         =  6;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_9V0         =  7;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_1_2AA       =  8;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_AAAA        =  9;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_A           = 10;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_B           = 11;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_F           = 12;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_N           = 13;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_NO6         = 14;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SUBC        = 15;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_A23         = 16;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_A27         = 17;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_BA5800      = 18;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_DUPLEX      = 19;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_4SR44       = 20;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_523         = 21;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_531         = 22;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_15V0        = 23;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_22V5        = 24;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_30V0        = 25;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_45V0        = 26;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_67V5        = 27;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_J           = 28;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_CR123A      = 29;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_CR2         = 30;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_2CR5        = 31;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_CR_P2       = 32;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_CR_V3       = 33;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR41        = 34;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR43        = 35;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR44        = 36;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR45        = 37;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR48        = 38;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR54        = 39;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR55        = 40;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR57        = 41;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR58        = 42;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR59        = 43;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR60        = 44;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR63        = 45;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR64        = 46;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR65        = 47;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR66        = 48;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR67        = 49;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR68        = 50;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR69        = 51;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR516       = 52;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR731       = 53;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_SR712       = 54;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_LR932       = 55;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_A5          = 56;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_A10         = 57;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_A13         = 58;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_A312        = 59;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_A675        = 61;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_AC41E       = 62;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_10180       = 63;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_10280       = 64;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_10440       = 65;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_14250       = 66;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_14430       = 67;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_14500       = 68;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_14650       = 69;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_15270       = 70;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_16340       = 71;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_RCR123A     = 72;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_17500       = 73;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_17670       = 74;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_18350       = 75;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_18500       = 76;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_18650       = 77;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_19670       = 78;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_25500       = 79;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_26650       = 80;
                COMMON_BATTERY_DESIGNATION_IDENTIFIER_32600       = 81;
        }

        /**
         *  This enumeration represents American National Standards Institute
         *  (ANSI)-specified designations for a variety of battery types,
         *  sizes, and chemistries.
         */
        enum ANSIBatteryDesignationIdentifier {
                option (wdl.enumopts) = {
                        extendable: false
                };

                ANSI_BATTERY_DESIGNATION_IDENTIFIER_UNSPECIFIED   =  0;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_24A           =  1;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_24D           =  2;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_24LF          =  3;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_15A           =  4;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_15D           =  5;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_15LF          =  6;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1P2H2         =  7;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1P2K2         =  8;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_14A           =  9;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_14D           = 10;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_13A           = 11;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_13D           = 12;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_3LR12         = 13;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_3R12          = 14;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1604A         = 15;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1604D         = 16;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1604LC        = 17;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_7P2H5         = 18;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_11604         = 19;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_908A          = 20;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_908D          = 21;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_25A           = 22;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_60            = 23;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_910A          = 24;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_910D          = 25;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_905           = 26;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1811A         = 27;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1306A         = 28;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1307AP        = 29;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_220           = 30;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_215           = 31;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_210           = 32;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_213           = 33;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_217           = 34;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1412A         = 35;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_915           = 36;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_915A          = 37;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_918A          = 38;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5018LC        = 39;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5046LC        = 40;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5032LC        = 41;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5024LC        = 42;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5047LC        = 43;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5047LF        = 44;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5033LC        = 45;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5034LC        = 46;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5012LC        = 47;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5020LC        = 48;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5009LC        = 49;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5000LC        = 50;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5003LC        = 51;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5004LC        = 52;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5011LC        = 53;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_5029LC        = 54;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1135SO        = 55;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1134SO        = 56;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1133SO        = 57;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1132SO        = 58;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1166A         = 59;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1107SO        = 61;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1131SOP       = 62;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1136SO        = 63;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1138SO        = 64;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1160SO        = 65;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1165SO        = 66;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1158SO        = 67;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1163SO        = 68;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1175SO        = 69;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_1176SO        = 70;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_7012ZD        = 71;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_7005ZD        = 72;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_7000ZD        = 73;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_7002ZD        = 74;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_7003ZD        = 75;
                ANSI_BATTERY_DESIGNATION_IDENTIFIER_7001Z         = 76;
        }

        /**
         *  This enumeration represents International Electrotechnical
         *  Commission (IEC)-specified designations for a variety of battery
         *  types, sizes, and chemistries.
         */
        enum IECBatteryDesignationIdentifier {
                option (wdl.enumopts) = {
                        extendable: false
                };

                IEC_BATTERY_DESIGNATION_IDENTIFIER_UNSPECIFIED    =   0;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR03           =   1;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R03            =   2;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_FR03           =   3;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_HR03           =   4;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_KR03           =   5;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_ZR03           =   6;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR6            =   7;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R6             =   8;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_FR6            =   9;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_HR6            =  10;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_KR6            =  11;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_ZR6            =  12;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR14           =  13;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R14            =  14;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_HR14           =  15;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_KR14           =  16;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_ZR14           =  17;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR20           =  18;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R20            =  19;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_HR20           =  20;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_KR20           =  21;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_ZR20           =  22;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_3LR12          =  23;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_3R12           =  24;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_6LR61          =  25;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_6F22           =  26;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_6KR61          =  27;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_6HR61          =  28;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_4LR25Y         =  29;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_4R25           =  30;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR14250        =  31;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_ER14250        =  32;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR8D425        =  33;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R23            =  34;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR23           =  35;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R12            =  36;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR12           =  37;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R25            =  38;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR25           =  39;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR1            =  40;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R1             =  41;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_HR1            =  42;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_KR1            =  43;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_R40            =  44;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_KR22C429       =  45;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_HR22C429       =  46;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_8LR932         =  47;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_8LR732         =  48;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_2R10           =  49;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_4LR44          =  50;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_3LR50          =  51;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_10F15          =  52;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_15F20          =  53;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_20F20          =  54;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_30F20          =  55;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_4LR61          =  56;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_4R25X          =  57;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_4LR25X         =  58;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_4R25_2         =  59;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_4LR25_2        =  61;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR17345        =  62;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR15H270       =  63;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_2CR5           =  64;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR_P2          =  65;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR927          =  66;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR1025         =  67;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR1130         =  68;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR1216         =  69;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR1220         =  70;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR1225         =  71;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR1616         =  72;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR1620         =  73;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR1632         =  74;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2012         =  75;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2016         =  76;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2020         =  77;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2025         =  78;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2032         =  79;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2320         =  80;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2325         =  81;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2330         =  82;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2354         =  83;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2412         =  84;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2430         =  85;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2450         =  86;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR2477         =  87;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR3032         =  88;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_CR11108        =  89;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR736          =  90;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR736          =  91;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR1142         =  92;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR1142         =  93;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR1154         =  94;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR1154         =  95;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR936          =  96;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR936          =  97;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR754          =  98;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR754          =  99;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR1131         = 100;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR1131         = 101;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR1121         = 102;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR1121         = 103;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR1116SW       = 104;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR926          = 105;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR926          = 106;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR721          = 107;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR721          = 108;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR726          = 109;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR726          = 110;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR621          = 111;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR621          = 112;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR521          = 113;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR521          = 114;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR527          = 115;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR527          = 116;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR65           = 117;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR626          = 118;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR626          = 119;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR716          = 120;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR916          = 121;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR916          = 122;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR921          = 123;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR921          = 124;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR516          = 125;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR516          = 126;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR416          = 127;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR416          = 128;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR731          = 129;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR731          = 130;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_SR712          = 131;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_LR932          = 132;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_PR63           = 133;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_PR70           = 134;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_PR48           = 135;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_PR41           = 136;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_PR44           = 137;
                IEC_BATTERY_DESIGNATION_IDENTIFIER_PR43           = 138;
        }

        /**
         *  This structured property is intended to provide a customer or
         *  maintenance personnel with precise information that they can use
         *  to order or source the exact or equivalent battery/ies necessary
         *  for a battery power source.

         *  For better or worse, battery designations tend to be all over the
         *  map, with common or colloquial designations most familiar to
         *  customers but very locale-specific or, worse, ambiguous since in
         *  many cases colloquial designations only denote size. In some
         *  instances, standards organizations such as ANSI or IEC have
         *  attempted to standardize these to make battery specification
         *  clearer and less ambiguous, for example, representing both size
         *  __and__ chemistry.
         *
         *  When providing a designation for your battery power source, use
         *  one or more of the common, ANSI, and IEC designations along with
         *  the human-readable description to describe your battery/ies.
         *
         *  For example:
         *
         *    - description             : Energizer Ultimate Lithium L91
         *    - common_identifier       : AA
         *    - ansi_identifier         : 15LF
         *    - iec_identifier          : FR6
         *
         */
        message BatteryDesignation {
                option (wdl.message_type) = STRUCT;
                option (wdl.structopts) = {
                        extendable: false
                };

                /**
                 *  This optional property, encoded as a UTF-8 String or
                 *  unsigned fixed point number (string reference), describes
                 *  the designation in a human-readable format in the vendor's
                 *  preferred language localization. This value is assigned
                 *  and administered by the vendor.
                 *
                 *  The UTF-8 String is used when the description is a
                 *  non-localized string literal. The string reference is used
                 *  when the string, localized or not, is located in a string
                 *  table associated with the device resource containing this
                 *  trait instance.
                 *
                 *  This value will most typically be used for common
                 *  designations since the ANSI or IEC designations are
                 *  usually unambiguous and typically require no further
                 *  description.
                 *
                 *  For example, the common designation 'AA' is ambiguous
                 *  since it does not specify chemistry and a product may have
                 *  specific requirements. This could be made more specific by
                 *  supplying a description of "Energizer Ultimate Lithium
                 *  L91", indicating a very-specific brand and type of 'AA'
                 *  designation.
                 *
                 *  Absence of this property implies a NULL value and a NULL
                 *  value implies that the device resource has provided no
                 *  cell designation description.
                 *
                 */
                weave.common.StringRef              designation_description        = 1 [(wdl.prop) = { string_constraints: { max_length: 32 },
                                                                                                       optional: true,
                                                                                                       nullable: true}];

                /**
                 *  This optional property represents the common (or colloquial) designation
                 *  identifier for a battery power source. For example, AA.
                 *
                 *  Absence of this property and a NULL value implies
                 *  that the device resource has provided no common or
                 *  colloquial designation identifier and that the value is
                 *  implicitly COMMON_BATTERY_DESIGNATION_IDENTIFIER_UNSPECIFIED.
                 *
                 */
                CommonBatteryDesignationIdentifier  common_designation_identifier  = 2 [(wdl.prop) = { optional: true,
                                                                                                       nullable: false}];

                /**
                 *  This optional property represents the ANSI designation identifier
                 *  for a battery power source. For example, 15LF.
                 *
                 *  Absence of this property and a NULL value implies
                 *  that the device resource has provided no ANSI
                 *  designation identifier and that the value is
                 *  implicitly ANSI_BATTERY_DESIGNATION_IDENTIFIER_UNSPECIFIED.
                 *
                 */
                ANSIBatteryDesignationIdentifier    ansi_designation_identifier    = 3 [(wdl.prop) = { optional: true,
                                                                                                       nullable: false}];

                /**
                 *  This optional property represents the IEC designation identifier
                 *  for a battery power source. For example, FR6.
                 *
                 *  Absence of this property and a NULL value implies
                 *  that the device resource has provided no IEC
                 *  designation identifier and that the value is
                 *  implicitly IEC_BATTERY_DESIGNATION_IDENTIFIER_UNSPECIFIED.
                 *
                 */
                IECBatteryDesignationIdentifier     iec_designation_identifier     = 4 [(wdl.prop) = { optional: true,
                                                                                                       nullable: false}];
        }

        // -------- SUPER PROPERTIES -------- //

        /**
         *  This is a required property representing an indication of
         *  the type or class of power source for the trait instance
         *  published by the resource.
         *
         *  This should be identical the type specified in the
         *  analagous Power Source instance for this
         *  power source.
         *
         */
        weave.trait.power.PowerSourceCapabilitiesTrait.PowerSourceType         type              = 1;

        /**
         *  This property is an optional property encoded as a UTF-8
         *  String or unsigned fixed point number (string reference)
         *  that describes the power source in a human-readable format
         *  in the vendor's preferred language localization. This
         *  value is assigned and administered by the vendor.
         *
         *  The UTF-8 String is used when the description is a
         *  non-localized string literal. The string reference is used
         *  when the string, localized or not, is located in a string
         *  table associated with the device resource containing this
         *  trait instance.
         *
         *  Absence of this property implies a NULL value and a NULL
         *  value implies that the device resource has provided no
         *  description of the power source.
         *
         */
        weave.common.StringRef  description       = 2 [(wdl.prop) = { string_constraints: { max_length: 32 },
                                                                      optional: true,
                                                                      nullable: true}];

        /**
         *  This property is used to indicate the nominal output
         *  voltage for a power source.
         *
         *  This value should match that printed on the regulatory
         *  compliance label (typically displaying both nominal
         *  voltage and maximum current) for the device resource
         *  publishing the trait instance.
         *
         */
        float                   nominal_voltage   = 3 [(wdl.prop) = { quantity_type: VOLTAGE,
                                                                      number_constraints: { min: 0.0, max: 700.0,
                                                                      precision: 0.001,
                                                                      fixed_encoding_width: 32 }},
                                                       (wdl.tlv)  = { encoding: FIXED } ];

        /**
         *  This optional property is used to indicate the maximum
         *  current for a power source.
         *
         *  This value should match that printed on the regulatory
         *  compliance label (typically displaying both nominal
         *  voltage and maximum current) for the device resource
         *  publishing the trait instance.
         *
         *  Absence of this property implies a NULL value and a NULL
         *  value implies that the device resource has no known or
         *  published maximum current.
         *
         */
        google.protobuf.FloatValue                   maximum_current   = 4 [(wdl.prop) = { optional: true,
                                                                      nullable: true,
                                                                      quantity_type: CURRENT,
                                                                      number_constraints: { min: 0.0, max: 1000.0,
                                                                      precision: 0.001,
                                                                      fixed_encoding_width: 32 }},
                                                       (wdl.tlv)  = { encoding: FIXED } ];

        /**
         *  This property represents the current type of the power
         *  source.
         */
        weave.trait.power.PowerSourceCapabilitiesTrait.PowerSourceCurrentType  current_type      = 5;

        /**
         *  This property represents, as an unsigned integer in which
         *  0 is the highest order (i.e. primary), 1 the next highest
         *  (i.e. secondary), etc., the system usage order of a power
         *  source.
         *
         *  This is used along with the Status property to determine
         *  how a system that supports multiple power sources will use
         *  them, either concurrently (many sources of the same order)
         *  or serially (many sources of ascending order).
         *
         *  The following table provides some suggested examples for
         *  assigning order to some sample power sources:
         *
         *  <table>
         *  <tr>
         *      <th>Sources</th>
         *      <th>Order</th>
         *      <th>Description</th>
         *  </tr>
         *  <tr>
         *      <td>
         *          Mains Power<br/>
         *          Mains Power
         *      </td>
         *      <td>
         *          0<br/>
         *          0
         *      </td>
         *      <td>
         *          Design with symmetric, dual-redundant mains power
         *          sources. The system is powered by either one of the
         *          power sources.
         *      </td>
         *  </tr>
         *  <tr>
         *      <td>
         *          Built-in Battery Power<br/>
         *          Mains Power
         *      </td>
         *      <td>
         *          0<br/>
         *          1
         *      </td>
         *      <td>
         *          Design in which the system is always running from a
         *          built-in battery and the mains power merely serves to
         *          keep the battery charged unless the battery fails at
         *          which point mains power would power the system.
         *      </td>
         *  </tr>
         *  <tr>
         *      <td>
         *          Mains Power<br/>
         *          Back-up Battery Power
         *      </td>
         *      <td>
         *          0<br/>
         *          1
         *      </td>
         *      <td>
         *          Design in which the system is always running from a
         *          mains power and the back-up battery is out-of-circuit
         *          until mains power fails at which point the back-up
         *          battery powers the system.
         *      </td>
         *  </tr>
         *  <tr>
         *      <td>
         *          Built-in Battery Power<br/>
         *          DC Adapter Power<br/>
         *          USB Power
         *      </td>
         *      <td>
         *          0<br/>
         *          1<br/>
         *          1
         *      </td>
         *      <td>
         *          Design in which the system is always running from a built-
         *          in battery and the mains or USB power merely serve to keep
         *          the battery charged. If the battery fails, then either mains
         *          or USB power would power the system.
         *      </td>
         *  </tr>
         *  </table>
         *
         */
        uint32                  order             = 6;

        /**
         *  This property indicates whether a power source is
         *  removable, such as a battery or plug-in DC adapter.
         *
         */
        bool                    removable         = 7;

        // ----------- PROPERTIES ----------- //

        option (wdl.properties) = {
                writable: READ_ONLY,
                variability: STATIC,
                extends: {
                    trait: "weave.trait.power.PowerSourceCapabilitiesTrait"
                },
                extendable: true,
                reserved_tag_min: 32,
                reserved_tag_max: 47
        };

        /**
         *  This required property represents whether the battery is
         *  rechargeable.
         */
        bool                         rechargeable = 32;

        /**
         *  This optional property represents the total electric
         *  charge capacity of the battery power source.
         *
         *  Absence of this property implies a NULL value and a NULL
         *  value implies that the device resource has no known or
         *  published battery capacity.
         *
         */
        google.protobuf.FloatValue                        capacity     = 33 [(wdl.prop) = { quantity_type: ELECTRIC_CHARGE,
                                                                       number_constraints: { min: 0.0, max: 4000.0,
                                                                       precision: 0.001,
                                                                       fixed_encoding_width: 32 },
                                                                       optional: true,
                                                                       nullable: true },
                                                        (wdl.tlv)  = { encoding: FIXED } ];

        /**
         * This required property represents the battery cell
         * chemistry type of the battery power source.
         */
        BatteryChemistry             chemistry    = 34;

        /**
         *  This required property represents the count of individual,
         *  user- or factory-serviceable battery cells or packs in the
         *  battery power source.
         */
        uint32                       count        = 35;

        /**
         *  This required property represents whether the battery or
         *  batteries are replaceable in the battery power source.
         *
         *  Frequently, battery power sources are replaceable. In some
         *  cases, the battery/ies can be replaced by the user. In
         *  other cases, the battery/ies should be replaced by an
         *  authorized factory technician. Finally, in rare occasions,
         *  the battery/ies is/are fixed and the entire product must be
         *  disposed of when the batteries reach the end of their
         *  life. This trait property informs the customer of these
         *  replaceability conditions.
         *
         *  This trait property value should almost always track and
         *  mirror the _Removable_ property in the base power source
         *  trait where a value of _true_ for _Removable_ would map to
         *  _User Replaceable_ for _Replaceability_ and _false_ would
         *  map to _Not Replaceable_. However, there are cases where
         *  _Removable_ would be _false_ but _Replaceable_ would be
         *  _Factory Replaceable_, such as those products for which the
         *  battery or batteries are not user-removable but are
         *  serviceable (i.e. factory- but not user-replaceable).
         */
        BatteryReplaceability        replaceable  = 36;

        /**

         *  This optional property that may contain a structured
         *  representation intended to provide a customer or
         *  maintenance personnel with precise information that they
         *  can use to order or source the exact or equivalent
         *  battery/ies necessary for the battery power source.
         *
         *  The designation may include a human-readable designation
         *  description in the vendor's preferred language
         *  localization, along with identifiers in common (or
         *  colloquial form) or in ANSI- or IEC- standard forms. The
         *  designation identifiers may be used alone or augmented
         *  with the human-readable descriptive string.
         *
         *  For _Replaceability_ of _User Replaceable_, vendors should
         *  include, at minimum, a Common designation and, ideally, a
         *  Common, ANSI, and IEC designation as appropriate for the
         *  geographies they will be marketing and selling a product
         *  into.
         *
         *  Clients consuming this information may choose how to
         *  present this information. For example, space in a
         *  graphically-rich user interface could be allocated to
         *  present all three designations, when available, as shown
         *  below:
         *
         *    Replace Batteries with:
         *        AA (Energizer Ultimate Lithium L91)
         *        Also Known As:
         *            ANSI: 15A
         *            IEC: LR6
         *
         *  Absence of this property or a NULL value imply that the
         *  device resource has provided no common designations and
         *  equivalent to providing an empty structure with no
         *  containing properties or providing all properties with all
         *  values set to NULL.
         *
         */
        BatteryDesignation           designations = 37 [(wdl.prop) = { optional: true,
                                                                       nullable: true }];
}
