/*
 *
 *    Copyright (c) 2019 Google LLC.
 *    Copyright (c) 2017-2018 Nest Labs, Inc.
 *    All rights reserved.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

/**
 *    @file
 *      This file specifies a Weave Common trait that represents
 *      volume on a resource with a simple audio component such as
 *      voice instructions or audible indicators.
 *
 */

syntax = "proto3";

package weave.trait.audio;

import "wdl/wdl_options.proto";

option java_outer_classname = "WeaveInternalBasicVolumeTrait";
option objc_class_prefix = "SCM";

/**
 * BasicVolume Trait
 * For representing volume on devices with a simple audio component, like
 * voice instructions or audible indicators.
 */
message BasicVolumeTrait {
  option (wdl.message_type) = TRAIT;

  option (wdl.trait) = {
    stability: PROD,
    id: 0x0201,
    vendor_id: 0x0000,
    version: 1
  };

  // ----------- PROPERTIES ----------- //

  /**
   *  Value of the volume, normalized between 0 and 100.
   *  Devices must accept the full range from 0 to 100 even if the device
   *  does not support this full volume resolution. In this case the device
   *  should map the normalized value to it's internal volume value.
   *  BasicVolumeCapabilitiesTrait should be used for publishing the number of
   *  volume set points the device supports.
   *  volume=0 must be silent, this is independent of mute.
   *  volume>0 should not be silent.
   */
  uint32 volume = 1 [(wdl.prop) = {quantity_type:NORMALIZED,
                                   uint_constraints: {min: 0, max: 100, width: 8}}];

  /// whether audio is muted; volume value should remain unaffected
  bool mute = 2;
}
